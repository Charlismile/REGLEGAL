@page "/formulario/registro-comite"
@using REGISTROLEGAL.Models.LegalModels
@layout EmptyLayout
@attribute [Authorize(Roles = "user_admin, user_estandar")]
@using Microsoft.AspNetCore.Authorization
@using REGISTROLEGAL.Components.Layout

<EditForm EditContext="editContext" OnValidSubmit="@HandleValidSubmit"
          class="formulario-comite shadow-sm rounded p-4 bg-white">
    <DataAnnotationsValidator/>
    <ValidationSummary Class="alert alert-danger mb-3 shadow-sm rounded"/>

    <h3 class="titulo-form">Registro de Comité de Salud</h3>

    <!-- TIPO DE TRÁMITE -->
    <fieldset class="bloque-form">
        <legend>Tipo de Trámite</legend>
        <div class="d-flex flex-wrap gap-4">
            <InputRadioGroup @bind-Value="CModel.TipoTramiteEnum"
                             @onchange="async _ => await OnTipoTramiteChanged()">
                <div class="form-check">
                    <InputRadio class="form-check-input" Value="TipoTramite.Personeria" id="Personeria"/>
                    <label class="form-check-label" for="Personeria">Personería</label>
                </div>
                <div class="form-check">
                    <InputRadio class="form-check-input" Value="TipoTramite.CambioDirectiva" id="Directiva"/>
                    <label class="form-check-label" for="Directiva">Cambio de Junta Directiva</label>
                </div>
                <div class="form-check">
                    <InputRadio class="form-check-input" Value="TipoTramite.JuntaInterventora" id="Interventora"/>
                    <label class="form-check-label" for="Interventora">Junta Interventora</label>
                </div>
            </InputRadioGroup>

            <ValidationMessage For="@(() => CModel.TipoTramiteEnum)" class="text-danger small"/>
        </div>
    </fieldset>

    @if (CModel.TipoTramiteEnum is TipoTramite.CambioDirectiva or TipoTramite.JuntaInterventora)
    {
        <div class="col-sm-6">
            <label class="form-label">Buscar Comité</label>

            <AutoComplete TItem="ComiteModel"
                          TValue="string"
                          Data="@comitesRegistrados"
                          Placeholder="Escriba el nombre del comité..."
                          TextField="NombreComiteSalud"
                          ValueField="ComiteId"
                          @bind-Value="comiteSeleccionadoIdString"
                          OnValueChange="@OnComiteSeleccionado" />

            <ValidationMessage For="@(() => CModel.NombreComiteSalud)" class="text-danger" />

            @if (!string.IsNullOrEmpty(mensajeBusqueda))
            {
                <div class="alert alert-info mt-2">@mensajeBusqueda</div>
            }
        </div>
    }

    <!-- DATOS DEL COMITÉ -->
    <fieldset class="bloque-form">
        <legend>Numero de Nota</legend>
        <div class="col-md-3">
            <InputText class="form-control"
                       placeholder="Nota"
                       @bind-Value="CModel.NumeroNota"/>
        </div>
        <div class="mb-3">
            <label class="form-label fw-semibold">Nombre del Comité de Salud *</label>
            <InputText @bind-Value="CModel.NombreComiteSalud" class="form-control"
                       placeholder="Ej: Comité de Salud de San Miguelito"
                       readonly="@(CModel.TipoTramiteEnum != TipoTramite.Personeria)"
                       disabled="@(CModel.TipoTramiteEnum == TipoTramite.CambioDirectiva || CModel.TipoTramiteEnum == TipoTramite.JuntaInterventora)"/>
            <ValidationMessage For="@(() => CModel.NombreComiteSalud)" class="text-danger small"/>
        </div>

        <div class="mb-3">
            <label class="form-label fw-semibold">Comunidad</label>
            <InputText @bind-Value="CModel.Comunidad" class="form-control"
                       placeholder="Ej: Barrio, corregimiento, etc."
                       readonly="@(CModel.TipoTramiteEnum != TipoTramite.Personeria)"
                       disabled="@(CModel.TipoTramiteEnum == TipoTramite.CambioDirectiva || CModel.TipoTramiteEnum == TipoTramite.JuntaInterventora)"/>
        </div>
        <div class="col">
            <label>Fecha de Creación:</label>
            <InputDate @bind-Value="CModel.FechaCreacion" class="form-control"
                       readonly="@(CModel.TipoTramiteEnum != TipoTramite.Personeria)"
                       disabled="@(CModel.TipoTramiteEnum == TipoTramite.CambioDirectiva || CModel.TipoTramiteEnum == TipoTramite.JuntaInterventora)"/>
            <ValidationMessage For="@(() => CModel.FechaCreacion)"/>
        </div>
    </fieldset>

    <!-- UBICACIÓN GEOGRÁFICA -->
    <fieldset class="bloque-form">
        <div class="row g-3 mb-2">
            <div class="col-sm-3">
                <label class="form-label">Región</label>
                <InputSelect TValue="int?" class="form-select"
                             Value="@CModel.RegionSaludId"
                             ValueChanged="@(async (int? RegionId) => await RegionChanged(RegionId ?? 0))"
                             ValueExpression="@(() => CModel.RegionSaludId)">
                    <option value="">--Seleccione--</option>
                    @foreach (var x in comiteRegioneslist)
                    {
                        <option value="@x.Id">@x.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => CModel.RegionSaludId)" class="text-danger"/>
            </div>

            <div class="col-sm-3">
                <label class="form-label">Provincia</label>
                <InputSelect TValue="int?" class="form-select"
                             Value="@CModel.ProvinciaId"
                             ValueChanged="@(async (int? ProvinciaId) => await ProvinciaChanged(ProvinciaId ?? 0))"
                             ValueExpression="@(() => CModel.ProvinciaId)">
                    <option value="">--Seleccione--</option>
                    @foreach (var x in comiteProvinciaList)
                    {
                        <option value="@x.Id">@x.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => CModel.ProvinciaId)" class="text-danger"/>
            </div>

            <div class="col-sm-3">
                <label class="form-label">Distrito</label>
                <InputSelect TValue="int?" class="form-select"
                             Value="@CModel.DistritoId"
                             ValueChanged="@(async (int? DistritoId) => await DistritoChanged(DistritoId ?? 0))"
                             ValueExpression="@(() => CModel.DistritoId)">
                    <option value="">--Seleccione--</option>
                    @foreach (var x in comiteDistritoList)
                    {
                        <option value="@x.Id">@x.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => CModel.DistritoId)" class="text-danger"/>
            </div>

            <div class="col-sm-3">
                <label class="form-label">Corregimiento</label>
                <InputSelect TValue="int?" class="form-select"
                             Value="@CModel.CorregimientoId"
                             ValueChanged="@(val => CModel.CorregimientoId = val)"
                             ValueExpression="@(() => CModel.CorregimientoId)">
                    <option value="">--Seleccione--</option>
                    @foreach (var x in comiteCorregimientoList)
                    {
                        <option value="@x.Id">@x.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => CModel.CorregimientoId)" class="text-danger"/>
            </div>
        </div>
    </fieldset>

    <!-- MIEMBROS DEL COMITÉ -->
    <h3>Miembros del Comité</h3>
    <div>
        @if (miembrosDesplegados)
        {
            @for (int i = 0; i < CModel.Miembros.Count; i++)
            {
                var miembro = CModel.Miembros[i];

                <div class="row g-2 align-items-center mb-2" @key="miembro">
                    <div class="col-md-3">
                        <InputText class="form-control"
                                   placeholder="Nombre *"
                                   @bind-Value="miembro.NombreMiembro"/>
                    </div>

                    <div class="col-md-3">
                        <InputText class="form-control"
                                   placeholder="Apellido *"
                                   @bind-Value="miembro.ApellidoMiembro" />
                    </div>

                    <div class="col-md-3">
                        <InputText class="form-control"
                                   placeholder="Cédula *"
                                   @bind-Value="miembro.CedulaMiembro" />
                    </div>

                    <div class="col-md-3">
                        <InputSelect class="form-select"
                                     @bind-Value="miembro.CargoId">
                            <option value="0">--Cargo--</option>
                            @foreach (var cargo in Cargos)
                            {
                                <option value="@cargo.Id">@cargo.Name</option>
                            }
                        </InputSelect>
                    </div>
                </div>
            }
        }
        else
        {
            <br/>
            <button type="button" class="btn btn-primary mt-2" @onclick="DesplegarMiembros">
                <i class="bi bi-plus-circle"></i> Agregar Miembros
            </button>
        }
    </div>

    <!-- ARCHIVO RESOLUCIÓN -->
    <fieldset class="bloque-form">
        <div class="col">
            <label>Número de Resolución:</label>
            <InputText @bind-Value="CModel.NumeroResolucion" class="form-control"/>
            <ValidationMessage For="@(() => CModel.NumeroResolucion)"/>
        </div>
        <div class="col">
            <label>Fecha de Resolución:</label>
            <InputDate @bind-Value="CModel.FechaResolucion" class="form-control"/>
            <ValidationMessage For="@(() => CModel.FechaResolucion)"/>
        </div>

        <legend>Archivo de Resolución</legend>
        <InputFile OnChange="CargarDocumentos" multiple accept=".pdf"/>
        <ul>
            @foreach (var doc in ArchivosSeleccionados)
            {
                <li>
                    @doc.Name
                    <button type="button" class="btn btn-sm btn-danger" @onclick="() => RemoverArchivoPendiente(doc)">
                        Quitar
                    </button>
                </li>
            }
        </ul>

        @if (!string.IsNullOrEmpty(_archivoResolucionUrl))
        {
            <div class="mt-2">
                <label>Vista previa del archivo guardado:</label>
                <a href="@_archivoResolucionUrl" target="_blank">Abrir resolución</a>
            </div>
        }

        <ValidationMessage For="@(() => _archivoResolucion)" class="text-danger small"/>
    </fieldset>


    <div class="mt-4 d-flex gap-2">
        <button type="submit" class="btn btn-primary px-4" disabled="@IsSubmitting">
            @(IsSubmitting ? "Registrando..." : "Registrar Comité")
        </button>
        <button type="button" class="btn btn-outline-secondary px-4" @onclick="Cancelar" disabled="@IsSubmitting">
            Cancelar
        </button>
    </div>
    <!-- Temporal: Botón de debug -->
    <div class="mt-2">
        <button type="button" class="btn btn-info btn-sm" @onclick="DebugInfo">
            Debug Info
        </button>
    </div>

    <!-- Mostrar estado actual -->
    @if (!string.IsNullOrEmpty(MensajeError) || !string.IsNullOrEmpty(MensajeExito))
    {
        <div class="alert @(!string.IsNullOrEmpty(MensajeError) ? "alert-danger" : "alert-success") mt-3">
            @MensajeError @MensajeExito
        </div>
    }
</EditForm>


